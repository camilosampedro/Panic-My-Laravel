{
    "swagger": "2.0",
    "info": {
        "title": "Panic my Laravel",
        "description": "This is a basic API for storing cities and people",
        "contact": {
            "email": "sampedro1903@gmail.com"
        },
        "version": "0.1.0"
    },
    "host": "panicmylaravel.herokuapp.com",
    "basePath": "/v2",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/v1/cities": {
            "get": {
                "tags": [
                    "city"
                ],
                "summary": "List all the cities",
                "description": "List all the cities available in the database",
                "operationId": "listCities",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/City"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "city"
                ],
                "summary": "Create a new city",
                "description": "Create a new city into the database",
                "operationId": "createCity",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "city",
                        "in": "body",
                        "description": "City to be added to the database",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/City"
                            }
                        }
                    }
                }
            }
        },
        "api/3rd-party": {
            "get": {
                "responses": {
                    "200": {
                        "description": "a response"
                    }
                }
            }
        },
        "api/test1": {
            "get": {
                "summary": "Example summary",
                "description": "Example description...\nMore description...",
                "responses": {
                    "200": {
                        "description": "a response"
                    }
                }
            }
        },
        "api/test2": {
            "get": {
                "summary": "Example summary",
                "responses": {
                    "200": {
                        "description": "a response"
                    }
                }
            }
        },
        "/pi/{item_name}": {
            "get": {
                "summary": "Get protected item",
                "parameters": [
                    {
                        "$ref": "#/parameters/ItemName"
                    }
                ],
                "responses": {
                    "default": {
                        "$ref": "#/responses/Item"
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update user entry",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "default": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Remove user entry",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "default": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "options": {
                "responses": {
                    "200": {
                        "description": "Some CORS stuff"
                    }
                }
            },
            "head": {
                "responses": {
                    "200": {
                        "description": "Only checking if it exists"
                    }
                }
            }
        }
    },
    "definitions": {
        "City": {
            "required": [
                "name",
                "min_latitude",
                "max_latitude",
                "min_longitude",
                "max_longitude"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "min_latitude": {
                    "type": "number",
                    "format": "double"
                },
                "max_latitude": {
                    "type": "number",
                    "format": "double"
                },
                "min_longitude": {
                    "type": "number",
                    "format": "double"
                },
                "max_longitude": {
                    "type": "number",
                    "format": "double"
                }
            },
            "type": "object",
            "xml": {
                "name": "City"
            }
        },
        "Panic": {
            "required": [
                "person_id",
                "latitude",
                "longitude"
            ],
            "properties": {
                "person_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                }
            },
            "type": "object",
            "xml": {
                "name": "Panic"
            }
        },
        "Person": {
            "required": [
                "name",
                "email",
                "city_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "type": "object",
            "xml": {
                "name": "Person"
            }
        },
        "Child": {
            "properties": {
                "isBaby": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            }
        },
        "ChildWithDocBlocks": {
            "properties": {
                "isBaby": {
                    "type": "boolean"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            }
        },
        "Customer": {
            "properties": {
                "firstname": {
                    "description": "The firstname of the customer.",
                    "type": "string"
                },
                "lastname": {
                    "description": "The lastname of the customer.",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "submittedBy": {
                    "$ref": "#/definitions/Customer"
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Customer"
                    }
                }
            }
        },
        "Hello": {
            "properties": {
                "greet": {}
            }
        },
        "NestedProperty": {
            "properties": {
                "parentProperty": {
                    "properties": {
                        "babyProperty": {
                            "properties": {
                                "theBabyOfBaby": {
                                    "properties": {
                                        "theBabyOfBabyBaby": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "boolean"
                                }
                            },
                            "type": "boolean"
                        }
                    },
                    "type": "boolean"
                }
            }
        }
    },
    "parameters": {
        "ItemName": {
            "name": "ItemName",
            "in": "path",
            "description": "protected item name",
            "required": true,
            "type": "string",
            "maxLength": 256
        }
    },
    "responses": {
        "Item": {
            "description": "A protected item"
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}